name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  # ————————————————————————————————————————————————
  # 1. Python 脚本测试
  test-python:
    name: Run Python Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug list files
        run: |
          echo "PWD=$(pwd)"
          echo "=== Repository Contents ==="
          ls -R .

      - name: Check required small data files
        shell: bash
        run: |
          REPOROOT="$(git rev-parse --show-toplevel)"
          echo "Repo root is $REPOROOT"
          missing=false

          for P in \
            "$REPOROOT/DH_data/std_soln_He.p" \
            "$REPOROOT/rotmod_files"; do
            if [ ! -e "$P" ]; then
              echo "::error::Missing required path: $P"
              missing=true
            else
              echo "Found: $P"
            fi
          done

          if [ "$missing" = true ]; then
            echo "Please download and extract archives to DH_data/ and rotmod_files/:"
            echo "  https://zenodo.org/records/15691765/files/DH_data.rar?download=1"
            echo "  https://zenodo.org/records/15691753/files/rotmod_files.rar?download=1"
            exit 1
          fi

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install sympy pint emcee arviz rebound toml h5py pandas

      - name: Run analysis scripts
        run: |
          python scripts/mtheory_r4_fit.py -N 16 -d 5 -t 1e-2
          python scripts/scan_hidden_photon_refined_pickle.py

  # ————————————————————————————————————————————————
  # 2. Lean 编译测试（绕过 Lake，使用 lean --make）
  build-lean:
    name: Build & Verify Lean
    needs: test-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Elan (Lean toolchain manager)
        run: |
          curl -sSf https://elan.lean-lang.org/elan-init.sh \
            | sh -s -- -y --default-toolchain leanprover/lean4:stable

      - name: Verify Lean version
        run: lean --version

      - name: Compile Lean sources with lean --make
        working-directory: photon_project_formal
        run: lean --make src/Main.lean