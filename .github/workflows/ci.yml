name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-python:
    name: Run Python Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 仅检查关键小文件和目录，不再尝试下载全量数据
      - name: Check required small data files
        run: |
          missing=false
          # 检查 std_soln_He.p
          if [ ! -f DH_data/std_soln_He.p ]; then
            echo "::error::Required data file missing: DH_data/std_soln_He.p"
            missing=true
          else
            echo "Found DH_data/std_soln_He.p"
          fi
          # 检查 rotmod_files 目录
          if [ ! -d rotmod_files ]; then
            echo "::error::Required data directory missing: rotmod_files/"
            missing=true
          else
            echo "Found rotmod_files/ directory"
          fi
          if [ "$missing" = true ]; then
            echo "Please download the full DH_data and rotmod_files archives from:"
            echo "  https://zenodo.org/records/15691765/files/DH_data.rar?download=1"
            echo "  https://zenodo.org/records/15691753/files/rotmod_files.rar?download=1"
            echo "and extract them into the project root DH_data/ and rotmod_files/ respectively."
            exit 1
          fi

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install sympy pint emcee arviz rebound toml h5py pandas

      - name: Run analysis scripts
        run: |
          python scripts/mtheory_r4_fit.py -N 16 -d 5 -t 1e-2
          python scripts/scan_hidden_photon_refined_pickle.py

  build-lean:
    name: Build & Verify Lean
    needs: test-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Lean + Lake
        uses: leanprover/lean-action@v1
        with:
          lean-version: latest

      - name: Verify Lake files
        working-directory: photon_project_formal
        run: |
          ls -l lakefile.toml lake-manifest.json lean-toolchain

      - name: Build Lean project
        working-directory: photon_project_formal
        run: lake build --verbose
